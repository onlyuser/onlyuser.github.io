JERRY J. CHEN - U.S. CITIZEN

ADDRESS:

  Email: onlyuser@gmail.com <mailto:onlyuser@gmail.com>

PROFESSIONAL OBJECTIVE:

  R&D Product Development

BACKGROUND:

  Parser expert with 3D graphics experience.
  Familiar with Linux software development.

EDUCATION

 2004 - 2006

  NATIONAL TAIWAN UNIVERSITY                                     TAIPEI, TAIWAN
  Master of Science in Computer Science and Information Engineering, June 2006.
  Courses taken include Computing Theory, Natural Language Processing, Neural
  Networks, Virtual Reality, Pattern Analysis and Classification, Algorithms
  for Analyzing Biological Sequences, Advanced Topics in Learning and Vision

  ** Thesis: "Path-Planning: Hybrid Ellipsoid aMAPRM using Adaptive Voronoi-
  cuts"

 1999 - 2003

  UNIVERSITY OF CALIFORNIA, IRVINE                              IRVINE, CA, USA
  Bachelor of Science in Information and Computer Science, December 2003.
  Courses taken include Discrete Math, Boolean Logic, Data Structures, Linear
  Algebra, Computer Organization, Calculus, Physics, Software Engineering,
  Programming Languages, 3D Geometry, Digital Logic Design, Artificial
  Intelligence, Group Theory, Operating Systems, Computability, Computer System
  Architecture, File & Database Management, Computer Networks, Design &
  Analysis of Algorithms, Nonlinear Programming, Compilers & Interpreters,
  Project in Artificial Intelligence, Linear Programming, Computer Game
  Development

  ** Made Dean's Honor List in Fall 1999, Spring 2003

TECHNICAL SUMMARY:

  C++ (Inc. STL), LexYacc / ANTLR / Boost Spirit, OpenGL, glsl shader, glm,
  gdb/cgdb, valgrind/kcachegrind, git, make/CMake, CUDA, Graphviz, bash, tcl,
  Eclipse CDT, Bullet physics, VR

ACTIVELY MAINTAINED:

  C++ (Inc. STL), LexYacc, gdb, make, bash, tcl

LANGUAGES:

  Native bilingual proficiency for both English and Chinese

EXPERIENCE:

 2012 - Present

  SYNOPSYS                                                       TAIPEI, TAIWAN
  Develop EDA (Electronic Design Automation) CAD software for PG network
  voltage drop analysis as R&D Engineer in IC Compiler team, Design Group.
  Owner of IC Compiler's RedHawk & PrimeRail In-Design flows, a native UI in IC
  Compiler to generate scripts and prepare input for RedHawk & PrimeRail. Owner
  of foundry certification for electromigration rule translation from foundry
  format "iRCX" to Synopsys proprietary format "ITF-EM". Developed IC
  Compiler's RedHawk & PrimeRail result "heatmap" GUI display and result query
  commands. Migrated In-Design flow's backend tool from PrimeRail to RedHawk.
  Developed an "expression filter" to PrimeRail's PG network integrity missing
  via check feature. Ported IC Compiler I's layout geometry query commands to
  PrimeRail. Maintained PrimeRail's performance, memory use, and accuracy
  monitoring website. Coding done on Linux using C/C++, LexYacc. Work with gcc,
  gdb, tcl, Code-Collaborator, Coverity.
  http://www.synopsys.com/

 2010 - 2012

  ZILLIANS                                                       TAIPEI, TAIWAN
  Developed ECMAScript cross-compiler toolchain for GPU-based MMO game server
  as partner in startup. Responsible for language design, compiler front-end,
  semantic check, C++ name-mangling, language built-in ADT datatypes (string,
  array, map), Doxygen custom language support. Implement PTX parser for LLVM
  compiler backend retooling. Implement GPU space partitioning / event
  scheduling for game service framework. Coding done on Linux using C++, CUDA,
  ANTLR, Boost Spirit. Worked with CUDA Profiler, gcc/nvcc, cgdb, valgrind/
  kcachegrind, Graphviz, Eclipse CDT, CMake, Doxygen.
  http://www.zillians.com/

 2008 - 2010

  SPRINGSOFT                                               SCIENCE PARK, TAIWAN
  Developed EDA (Electronic Design Automation) CAD software as R&D Engineer in
  ADP (Analog Design Platform) team. Rewrote from scratch new CDF (Component
  Description Format) parser to facilitate product migration to OpenAccess.
  Rewrote aging netlist name parser to support multi-dimension Python-style
  array slicing, a more powerful syntax for bus expressions. Took charge of
  integrating SPICE / EDIF / Verilog / AMS import-export flows into product.
  Maintained legacy EDIF (Electronic Design Interchange Format) parser.
  Participated in shipping ADP 2.1v3-2.1v5. Coding done on Linux using C++,
  LexYacc. Worked with gcc, gdb/dbx, Rational Purify, Rational Quantify, Visio.
  http://www.springsoft.com/

 2007

  TREND MICRO                                                    TAIPEI, TAIWAN
  Developed antivirus software as R&D Engineer in Small-Medium-Business
  division. Updated communications code in product "CSM OfficeScan" from
  WinInet to WinHTTP. Collaborated with security architect to conduct
  OfficeScan network protocol vulnerability survey. Participated in drafting
  new architecture for OfficeScan restructuring. Ported InstallShield code in
  product "SMEX (ScanMail for Exchange Server)" to IIS 6.0 for Windows Server
  2003, to IIS 7.0 for Vista. Ported SMEX to 64-bit Vista. Coding done on
  Windows using C++, STL. Worked with InstallShield, Ethereal packet sniffer.
  http://us.trendmicro.com/us/home/

 Spring 2006

  VR PROJECT at NTU                                              TAIPEI, TAIWAN
  Led team of 3 to design, implement, document 3D virtual reality game in under
  6 weeks. Coding done on Windows using C#, OGRE 3D engine.
  http://www.ntu.edu.tw/

 Summer 2005

  ROBOT COMPETITION at NTU                                       TAIPEI, TAIWAN
  Participated in EE department competition and won 1st prize in "2005
  International Student Project Competition via Internet on Intelligent
  Mechatronics and Automation". Responsible for all higher-level robot control
  software. Developed finite state AI, scriptable robot arm controller.
  Designed "device-as-service" model where AI acting as client talks to device
  controllers acting as server. Robot features pc104-based control unit,
  differential turning, 5 DOF manipulator, CCD camera target acquisition,
  ultrasonic obstacle detection, laser distance measuring, encoder
  localization, Bluetooth remote software update. Coding done on Windows using
  C++, Visual Basic, OpenGL.

 2004

  APEX INTERNATIONAL                                             TAIPEI, TAIWAN
  Developed financial software as R&D Engineer in Derivatives Division.
  Implemented GUI applet for displaying stock charts, scrolling marquees in
  derivatives pricing software. Implemented Java servelet for serving XML stock
  quotations. Coding done on Windows using Java, Spring Framework, C#, GDI+,
  OpenGL.
  http://www.apex.com.tw/

 Spring 2003

  AI PROJECT at UCI                                             IRVINE, CA, USA
  Partnered with teammate to design, implement, document perceptron-based
  optical character recognition program. Coding done on Windows using C++,
  Visual Basic.
  http://www.uci.edu/

 Fall 2002

  GAME DEV PROJECT at UCI                                       IRVINE, CA, USA
  Led team of 4 to design, implement, document 3D racing game in under 6 weeks.
  Coding done on Windows using C++, OpenGL, FMOD.

PATENTS:
  Chen, Jerry Jen-Chih and Li, Chia. 2014. Authentication of unknown parties in secure computer communications. U.S. Patent 7,949,771, filed September 5, 2007, and issued May 24, 2011.
  Source: USPTO database.

PORTFOLIO:

  http://onlyuser.github.io

PROJECTS:

 Undated

  Developed LexYacc-based English parser that parses in parallel all possible
  interpretations of an English sentence accepted by a grammar and generates
  abstract syntax trees for successful parses.

  https://github.com/onlyuser/parse-english

 Undated

  Developed OpenGL 3D engine with environment-mapped
  reflection/refraction/double refraction (with Fresnel effect, chromatic
  dispersion, and Beer's law), screen space ambient occlusion, bump mapping,
  Phong shading, Bloom filter, 3ds mesh import, hierarchy linkages, NDOF 3D
  Inverse Kinematics solver (CCD), and platonic primitives generation. Platonic
  primitives supported include sphere, cube, cylinder, cone, grid, tetrahedron,
  and round brilliant diamond.
  https://github.com/onlyuser/dexvt-test
  https://github.com/onlyuser/dexvt-lite

  Developed bash scripts to generate call graph from elf binary.
  https://github.com/onlyuser/gen-callgraph

  Developed GLSL-based GPGPU Ping-pong technique demonstration.
  https://github.com/onlyuser/dexvt-gpgpu-ping-pong-technique

  Developed LexYacc-based English subset parser.
  https://github.com/onlyuser/parse-english

 2010

  Developed LexYacc tutorial on GitHub demonstrating various ways to build a
  parser.
  https://github.com/onlyuser/XLang

 2007

  Developed benchmarking program to compare efficiency among SSE, TBB, OpenMP.

 2005

  Developed LALR(1) parser-generator with backtracking conflict resolution,
  Prolog interpreter, scientific graphing calculator.

 2004

  Developed pattern analysis AI library with neural net classifier, k-means
  cluster classifier.

 2003

  Developed OpenGL 3D engine with multisample anti-aliasing, mip-mapped
  textures, compiled vertex array, vertex buffer object, particle system, lens-
  flare, height-mapped terrain, Autodesk 3D Studio format import/export.

 1999

  Developed software rendering 3D engine used in Canadian Space Agency
  polarimetry study "RADARSAT-2 radar survey mission".
  http://airsar.jpl.nasa.gov/documents/workshop2002/papers/T5.pdf

 1996

  Developed Othello game with UDP network support, minimax board evaluation AI.

REFERENCES:

  Available upon request
